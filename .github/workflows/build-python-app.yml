# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - "master"
      - "action-test"
      - "feature/*"
      - "feat-*"
      - "dev*"
  pull_request:
    branches:
      - "master"
      - "action-test"
      - "feature/*"
      - "dev*"

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pyinstaller
        if (Test-Path requirements.txt) {
          pip install -r requirements.txt
        }
      shell: pwsh

#    - name: Lint with flake8
#      run: |
#        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#      shell: pwsh

    - name: Build with PyInstaller
      run: |
        pyinstaller -F --windowed -i docs/images/fish-cake.ico --name DG-LAB-VRCOSC --add-data "docs/images/fish-cake.ico;docs/images" --paths=./src src/app.py
      shell: pwsh

    - name: Generate commit hash and timestamp file
      run: |
        $timestamp = Get-Date -Format "yyyyMMdd-HHmm"
        $commitHash = (git rev-parse --short HEAD)
        $fileContent = "Commit Hash: $commitHash`nTimestamp: $timestamp"
        Set-Content -Path dist/build-info.txt -Value $fileContent
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DG-LAB-VRCOSC
        path: dist/